# templates/build-ansible-collection/template.yml
spec:
  inputs:
    collection-path:
      description: "Collection source"
      type: string
    ansible-galaxy-extra-args:
      description: "Extra args for build"
      type: string
      default: ""
---

include:
  - local: 'templates/-1-common-rules/template.yml'

variables:
  COLLECTION_PATH: $[[ inputs.collection-path ]]
  ANSIBLE_GALAXY_EXTRA_ARGS: $[[ inputs.ansible-galaxy-extra-args ]]

stages:
  - build
  - push

build-ansible-galaxy-library:
  stage: build
  image: docker.io/cytopia/ansible:latest-tools
  before_script:
    - !reference [ .install-utility ]
  variables:
    PACKAGE_VERSION: "dev"
  script:
    - cd "$COLLECTION_PATH"
    - yq e ".version = \"${PACKAGE_VERSION}\"" -i galaxy.yml
    - ansible-galaxy collection build -f --output-path "${CI_PROJECT_DIR}/dist" "$ANSIBLE_GALAXY_EXTRA_ARGS"
    - ls -all "${CI_PROJECT_DIR}/dist"
  artifacts:
    name: "${CI_PROJECT_ID}-${CI_COMMIT_SHORT_SHA}"
    paths:
      - "${CI_PROJECT_DIR}/dist"
    expire_in: 1 day
  rules:
    - if: $CI_COMMIT_TAG
      variables:
        PACKAGE_VERSION: "$CI_COMMIT_TAG"
    - when: on_success


push-ansible-galaxy-library:
  stage: push
  extends: [ .package-cache, .release-package-template ]
  before_script:
    - !reference [ .install-utility ]
  needs:
    - build-ansible-galaxy-library
  script:
    - NAMESPACE=$(yq e '.namespace' "${COLLECTION_PATH}/galaxy.yml")
    - NAME=$(yq e '.name' "${COLLECTION_PATH}/galaxy.yml")
    - VERSION=$(yq e '.version' "${COLLECTION_PATH}/galaxy.yml")
    - |
      for file in dist/*.tar.gz; do
        # Проверяем, что файлы существуют
        [ -f "$file" ] || continue
      
        filename=$(basename "$file")
      
        curl -f --location \
             --header "JOB-TOKEN: ${CI_JOB_TOKEN}" \
             --upload-file "$file" \
             "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${NAMESPACE}-${NAME}/${CI_COMMIT_TAG}/$filename"
        {
          echo "release_package_name=$filename"
          echo "release_package_url=${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${NAMESPACE}-${NAME}/${CI_COMMIT_TAG}/$filename"
          echo "release_package_link_type=other"
          echo "release_package_direct_asset_path=$filename"
        } > release_after_script.env
      done

  rules:
    - if: $CI_COMMIT_TAG
