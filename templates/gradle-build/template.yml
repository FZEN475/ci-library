
Build artifact:
  image:
    name: gradle
    entrypoint: [ "" ]
  cache:
    key: "$CI_PROJECT_ID"
    paths:
      - ./cache/
  script:
    - gradle buildPlugin -g ./cache/
  artifacts:
    paths:
      - "build/distributions/*.*"
  rules:
    - when: always

push artifact:
  script:
    - >
      curl -v -k --location --header "JOB-TOKEN: ${CI_JOB_TOKEN}"
      --upload-file $(find ./build/distributions/ -type f -name '*.*')
      "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}${EXTENCION}"
  needs:
    - "Build artifact"
  rules:
    - when: always

mirror release to github:
  script:
    - >
      jq -n 
      --arg tag_name "$CI_COMMIT_TAG" 
      --arg target_commitish "main" 
      --arg name "$CI_COMMIT_TAG" 
      --arg body "$CI_PROJECT_NAME-$CI_COMMIT_TAG$EXTENCION" 
      --argjson draft "false" 
      --argjson prerelease "false" 
      --argjson generate_release_notes "false" 
      '$ARGS.named' > data.json
      cat ./data.json
    - |
      result=$(curl -L -X POST \
      -H "Accept: application/vnd.github+json" \
      -H "Authorization: Bearer $GITHUB_TOKEN" \
      -H "X-GitHub-Api-Version: 2022-11-28" \
      https://api.github.com/repos/FZEN475/${CI_PROJECT_NAME}/releases \
      -d @data.json )
    - echo "$result"
    - id=$(echo "$result" | jq -r  '.id' )
    - echo "$id"
    - |
      curl -L \
        -X POST \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer $GITHUB_TOKEN" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        -H "Content-Type: application/octet-stream" \
        https://uploads.github.com/repos/FZEN475/${CI_PROJECT_NAME}/releases/$id/assets?name=${CI_PROJECT_NAME}-${CI_COMMIT_TAG}${EXTENCION} \
        --data-binary "@$(find ./build/distributions/ -type f -name '*.*')"
  needs:
    - "Build artifact"
  allow_failure: true
  rules:
    - when: always