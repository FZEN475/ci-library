
.logs-scripts: |
  # BEGSCRIPT

  set -e

  function log_info() {
      echo -e "[\\e[1;94mINFO\\e[0m] $*"
  }

  function log_warn() {
      echo -e "[\\e[1;93mWARN\\e[0m] $*"
  }

  function log_error() {
      echo -e "[\\e[1;91mERROR\\e[0m] $*"
  }

  function fail() {
    log_error "$*"
    exit 1
  }

.global-cache:
  cache:
    - key: apt-cache
      paths:
        - /var/cache/apt/archives
    - key: apk-cache
      paths:
        - /var/cache/apk

.install-tool: |
  install_tool() {
    local tools="$@"
    if [ -d /var/cache/apt/archives ]; then
      apt-get update -qq && apt-get install -y -qq $tools
    elif [ -d /var/cache/apk ]; then
      apk add $tools
    elif command -v dnf >/dev/null 2>&1; then
      dnf install -y $tools
    else
      echo "⚠️ Неизвестный пакетный менеджер — установка пропущена"
    fi
  }  

.register-ca: |
  register_ca() {
    local crt_file="$1"

    if [ ! -f "$crt_file" ]; then
      log_warn "⚠️ Файл $crt_file не найден"
      return 0
    fi

    # Определяем OS
    if [ -f /etc/os-release ]; then
      . /etc/os-release
      OS_ID="$ID"
      OS_NAME="$NAME"
    else
      log_warn "⚠️ Не удалось определить операционную систему"
      return 0
    fi

    log_info "ℹ️ Обнаружена ОС: $OS_NAME ($OS_ID)"

    case "$OS_ID" in
      ubuntu|debian)
        # Проверяем пакет ca-certificates
        if ! dpkg -s ca-certificates >/dev/null 2>&1; then
          log_info "ℹ️ Устанавливаем пакет ca-certificates"
          apt-get update -qq
          apt-get install -y -qq ca-certificates
        fi
        cp "$crt_file" /usr/local/share/ca-certificates/
        update-ca-certificates
        log_info "✅ Сертификат зарегистрирован"
        ;;

      alpine)
        if ! apk info ca-certificates >/dev/null 2>&1; then
          log_info "ℹ️ Устанавливаем пакет ca-certificates"
          apk add ca-certificates
        fi
        cp "$crt_file" /usr/local/share/ca-certificates/
        update-ca-certificates
        log_info "✅ Сертификат зарегистрирован"
        ;;

      centos|rhel|fedora|rocky|alma)
        if ! rpm -q ca-certificates >/dev/null 2>&1; then
          log_info "ℹ️ Устанавливаем пакет ca-certificates"
          dnf install -y ca-certificates
        fi
        cp "$crt_file" /etc/pki/ca-trust/source/anchors/
        update-ca-trust extract
        log_info "✅ Сертификат зарегистрирован"
        ;;

      *)
        log_warn "⚠️ Неизвестная ОС ($OS_ID) — регистрация сертификата пропущена"
        return 0
        ;;
    esac
  }

.install-utility:
  - !reference [ .logs-scripts ]
  - !reference [ .install-tool ]
  - install_tool jq openssl ca-certificates
  - !reference [ .register-ca ]
  - register_ca() "$CI_SERVER_TLS_CA_FILE"


.push:
  only:
    - if: '$CI_PIPELINE_SOURCE != "push"'
      when: never
  not:
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: never
  protected-only:
    - if: '$CI_COMMIT_REF_PROTECTED == "false"'
      when: never
  not-protected-only:
    - if: '$CI_COMMIT_REF_PROTECTED == "true"'
      when: never

.merge:
  only:
    - if: '$CI_PIPELINE_SOURCE != "merge_request_event"'
      when: never
  not:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
  source-protect-only:
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_PROTECTED == null || $CI_MERGE_REQUEST_SOURCE_BRANCH_PROTECTED == "false"'
      when: never
  not-source-protect-only:
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_PROTECTED == "true"'
      when: never
  target-protect-only:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_PROTECTED == null || $CI_MERGE_REQUEST_TARGET_BRANCH_PROTECTED == "false"'
      when: never
  not-target-protect-only:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_PROTECTED == "true"'
      when: never

.tagged:
  only:
    - if: '$CI_COMMIT_TAG == null && $CI_COMMIT_BRANCH != null'
      when: never
  with:
    - if: '$CI_COMMIT_TAG == null'
      when: never
  not:
    - if: $CI_COMMIT_TAG
      when: never
  pattern:
    - if: '$CI_COMMIT_TAG_PATTERN == "" || $CI_COMMIT_TAG !~ $CI_COMMIT_TAG_PATTERN'
      when: never


.unprotected-branch-commit:
  rules:
    - !reference [.push, only]
    - !reference [.push, not-protected-only]
    - !reference [.tagged, not]

.protected-branch-commit:
  rules:
    - !reference [.push, only]
    - !reference [.push, protected-only]
    - !reference [.tagged, not]

.merge-to-protected-branch:
  rules:
    - !reference [.merge, only]
    - !reference [.merge, target-protect-only]
#    - !reference [.tagged, not] -> У запросов на слияние не может быть прикреплённых тегов.

.tags-only-pattern:
  rules:
    - !reference [.tagged, only]
    - !reference [.tagged, pattern]